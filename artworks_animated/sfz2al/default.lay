<?xml version="1.0"?>
<mamelayout version="2">
  <param name="game" value="sfz2al" />

  <!-- Image de fond -->
  <element name="bg" defstate="0">
    <image file="../../../../roms/mame/images/sfz2al-fanart.jpg" state="0"/>
  </element>

  <!-- Élément contenant toutes les images pour la carte de gauche -->
  <element name="inst_left" defstate="0">
    <image file="Instruction Card - Adon 01 - leftCenter.png" state="0"/>
    <image file="Instruction Card - Adon 02 - leftCenter.png" state="1"/>
    <image file="Instruction Card - Akuma 01 - leftCenter.png" state="2"/>
    <image file="Instruction Card - Akuma 02 - leftCenter.png" state="3"/>
    <image file="Instruction Card - Akuma 03 - leftCenter.png" state="4"/>
    <image file="Instruction Card - Birdie 01 - leftCenter.png" state="5"/>
    <image file="Instruction Card - Birdie 02 - leftCenter.png" state="6"/>
    <image file="Instruction Card - Charlie 01 - leftCenter.png" state="7"/>
    <image file="Instruction Card - Charlie 02 - leftCenter.png" state="8"/>
    <image file="Instruction Card - Chun-Li 01 - leftCenter.png" state="9"/>
    <image file="Instruction Card - Chun-Li 02 - leftCenter.png" state="10"/>
    <image file="Instruction Card - Dan 01 - leftCenter.png" state="11"/>
    <image file="Instruction Card - Dan 02 - leftCenter.png" state="12"/>
    <image file="Instruction Card - Dhalsim 01 - leftCenter.png" state="13"/>
    <image file="Instruction Card - Dhalsim 02 - leftCenter.png" state="14"/>
    <image file="Instruction Card - Evil Ryu 01 - leftCenter.png" state="15"/>
    <image file="Instruction Card - Evil Ryu 02 - leftCenter.png" state="16"/>
    <image file="Instruction Card - Gen 01 - leftCenter.png" state="17"/>
    <image file="Instruction Card - Gen 02 - leftCenter.png" state="18"/>
    <image file="Instruction Card - Gen 03 - leftCenter.png" state="19"/>
    <image file="Instruction Card - Guy 01 - leftCenter.png" state="20"/>
    <image file="Instruction Card - Guy 02 - leftCenter.png" state="21"/>
    <image file="Instruction Card - Guy 03 - leftCenter.png" state="22"/>
    <image file="Instruction Card - Ken 01 - leftCenter.png" state="23"/>
    <image file="Instruction Card - Ken 02 - leftCenter.png" state="24"/>
    <image file="Instruction Card - M Bison 01 - leftCenter.png" state="25"/>
    <image file="Instruction Card - M Bison 02 - leftCenter.png" state="26"/>
    <image file="Instruction Card - Rolento 01 - leftCenter.png" state="27"/>
    <image file="Instruction Card - Rolento 02 - leftCenter.png" state="28"/>
    <image file="Instruction Card - Rose 01 - leftCenter.png" state="29"/>
    <image file="Instruction Card - Ryu 01 - leftCenter.png" state="30"/>
    <image file="Instruction Card - Ryu 02 - leftCenter.png" state="31"/>
    <image file="Instruction Card - Sagat 01 - leftCenter.png" state="32"/>
    <image file="Instruction Card - Sakura 01 - leftCenter.png" state="33"/>
    <image file="Instruction Card - Sakura 02 - leftCenter.png" state="34"/>
    <image file="Instruction Card - Sodom 01 - leftCenter.png" state="35"/>
    <image file="Instruction Card - Sodom 02 - leftCenter.png" state="36"/>
    <image file="Instruction Card - Zangief 01 - leftCenter.png" state="37"/>
    <image file="Instruction Card - Zangief 02 - leftCenter.png" state="38"/>
    <image file="Instruction Card - Zangief 03 - leftCenter.png" state="39"/>
    <!-- Image vide pour réinitialiser les animations -->
    <image file="empty.png" state="999"/>
  </element>

  <!-- Vue qui affiche la carte de gauche -->
  <view name="InstructionsCardsView">
    <element id="background" ref="bg" state="0">
      <bounds x="0" y="347" width="4011" height="2328"/>
    </element>

    <!-- Définition de l'écran pour centrer la carte de gauche -->
    <screen index="0">
      <bounds x="510" y="347" width="3501" height="2330"/>
    </screen>

    <!-- Animation progressive pour la carte de gauche -->
    <repeat count="9">
      <param name="w" start="0" increment="63.75"/>
      <param name="alpha" start="0.1" increment="0.1"/>
      <element id="animate_left_~w~" ref="inst_left" state="999">
        <bounds x="0" y="347" width="~w~" height="2330"/>
        <color alpha="~alpha~"/>
      </element>
    </repeat>
    <!-- Élément final de la carte de gauche -->
    <element id="inst_left_final" ref="inst_left" state="999">
      <bounds x="0" y="347" width="510" height="2330"/>
    </element>
  </view>

  <!-- Script pour la gestion des entrées et l'animation de la carte de gauche -->
  <script><![CDATA[
    local stateLeft = 0
    local numStates = 40

    -- Variables pour les entrées du joueur 1
    local player1_start_IOPORT = "IN2"
    local player1_start_BITPORT = 0x0100
    local player1_keyup_IOPORT   = "IN0"
    local player1_keyup_BITPORT  = 0x0008
    local player1_keydown_IOPORT = "IN0"
    local player1_keydown_BITPORT= 0x0004

    -- Variables pour l'animation progressive
    local animFrames = { "0", "63.75", "127.5", "191.25", "255", "318.75", "382.5", "446.25", "510" }
    local leftAnimIndex = 1
    local tempoFrames = 1  -- Vitesse d'animation (modifiable)
    local leftFrameTimer = 0
    local leftAnimationFinished = true
    local leftAnimReinit = false

    local function setItemState(view, id, newState)
      if view.items[id] then
        view.items[id]:set_state(newState)
      end
    end

    local prevKeyUp1, prevKeyDown1 = true, true

    file:set_resolve_tags_callback(function()
      local view = file.views["InstructionsCardsView"]
      local leftFinal = view.items["inst_left_final"]

      -- Initialise l'état final de la carte de gauche
      leftFinal:set_state(stateLeft)

      view:set_prepare_items_callback(function()
        -- Gestion des entrées joueur 1
        local p1_start_val = file.device:ioport(player1_start_IOPORT):read()
        local p1_key_val   = file.device:ioport(player1_keyup_IOPORT):read()

        if ((p1_start_val & player1_start_BITPORT) == 0) then
          local p1_up = ((p1_key_val & player1_keyup_BITPORT) == 0)
          if p1_up and not prevKeyUp1 then
            stateLeft = (stateLeft + 1) % numStates
            leftAnimReinit = true
            print("Left: new state " .. stateLeft)
          end
          local p1_down = ((p1_key_val & player1_keydown_BITPORT) == 0)
          if p1_down and not prevKeyDown1 then
            stateLeft = (stateLeft - 1 + numStates) % numStates
            leftAnimReinit = true
            print("Left: new state " .. stateLeft)
          end
          prevKeyUp1 = p1_up
          prevKeyDown1 = p1_down
        else
          prevKeyUp1 = true
          prevKeyDown1 = true
        end

        -- Réinitialisation de l'animation pour la carte de gauche
        if leftAnimReinit then
          leftFinal:set_state(999)
          for i = 1, #animFrames do
            local id = "animate_left_" .. animFrames[i]
            setItemState(view, id, 999)
          end
          leftAnimIndex = 1
          leftFrameTimer = 0
          leftAnimationFinished = false
          local firstID = "animate_left_" .. animFrames[leftAnimIndex]
          setItemState(view, firstID, stateLeft)
          leftAnimReinit = false
        end

        -- Animation progressive de la carte de gauche
        if not leftAnimationFinished then
          leftFrameTimer = leftFrameTimer + 1
          if leftFrameTimer >= tempoFrames then
            leftFrameTimer = 0
            local curID = "animate_left_" .. animFrames[leftAnimIndex]
            setItemState(view, curID, 999)
            leftAnimIndex = leftAnimIndex + 1
            if leftAnimIndex <= #animFrames then
              local nextID = "animate_left_" .. animFrames[leftAnimIndex]
              setItemState(view, nextID, stateLeft)
            else
              leftAnimationFinished = true
              leftFinal:set_state(stateLeft)
            end
          end
        end

      end)
    end)
  ]]></script>
</mamelayout>
